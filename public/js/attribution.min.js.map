{"version":3,"sources":["attribution.js"],"names":["providePlugin","pluginName","pluginConstructor","ga","window","get_intersect","arr1","arr2","i","v","r","o","l","length","push","read_cookie","name","nameEQ","ca","String","document","cookie","split","c","charAt","substring","indexOf","set_cookie","value","timeout","domain_name","expires","date","Date","setTime","getTime","toGMTString","Attribution","tracker","config","this","current_timestamp","Math","round","get","domain","session_timeout","parseInt","hours","minutes","campaign_timeout","days","months","landing_page_id","getElementsByName","auth_key","email","form_id","organic_sources","social_sources","custom_social","_wma","tracking_id","timestamp","source","medium","keyword","content","campaign","landing_page","location","href","url_parameters","utm_source","utm_medium","utm_term","utm_content","utm_campaign","mediums","init","prototype","is_new_visitor","get_info","get_url_parameters","JSON","stringify","is_new_session","hostname","referrer","parse","set_event_listener","form","getElementById","_wmb","params","encodeURIComponent","addEventListener","e","x","createElement","src","attachEvent","undefined","url_strs","URL","refer_strs","q","url","hash","hashes","kv","slice","key","decodeURIComponent"],"mappings":"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","file":"attribution.min.js","sourcesContent":["/**\n * Project: Attribution Tracking\n *  \n * @description    Track visitor activity\n * @version        1.5\n * @link           https://developers.google.com/analytics/devguides/collection/analyticsjs/advanced\n * @author         Henry Tung <henrytung@gmail.com>\n */\n\n/**\n * Attribution Constructor\n * \n * @param {Object} tracker\n * @param {Object} config\n */\nvar Attribution = function( tracker, config ) {\n    this.tracker            = tracker;\n    this.current_timestamp  = Math.round( new Date().getTime() / 1000 );\n    this.domain_name        = this.tracker.get('cookieDomain') || document.domain;\n\n    // Calculate session and campaign timeouts\n    this.session_timeout    = parseInt((config.hours || 0) * 60 * 60, 10) + parseInt((config.minutes || 30) * 60, 10);\n    this.campaign_timeout   = parseInt((config.days || 0), 10) + parseInt((config.months || 6) * 30, 10);\n\n    // Get other relevant values\n    this.landing_page_id    = parseInt(document.getElementsByName(config.landing_page_id)[0].value);\n    this.auth_key           = document.getElementsByName(config.auth_key)[0].value;\n    this.email              = config.email;\n    this.form_id            = config.form_id;\n\n    /**\n     * Define organic sources\n     *\n     * @link {https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingTraffic?hl=en#searchEngine}\n     * @type {Array}\n     */\n    this.organic_sources = [\n        'google',\n        'daum',\n        'eniro',\n        'naver',\n        'yahoo',\n        'msn',\n        'bing',\n        'aol',\n        'lycos',\n        'ask',\n        'altavista',\n        'netscape',\n        'cnn',\n        'about',\n        'mamma',\n        'alltheweb',\n        'voila',\n        'virgilio',\n        'live',\n        'baidu',\n        'alice',\n        'yandex',\n        'najdi',\n        'mama',\n        'seznam',\n        'search',               // potential false positive\n        'wirtulana polska',\n        'onetcenter',\n        'szukacz',\n        'yam',\n        'pchome',\n        'kvasir',\n        'sesam',\n        'ozu',\n        'terra',\n        'mynet',\n        'ekolay',\n        'rambler'\n    ];\n\n    /**\n     * Define social sources\n     *\n     * Note: the current list is unpublished from Google\n     *\n     * @link {https://developers.google.com/analytics/devguides/socialdata/?csw=1}\n     * @link {https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSocial}\n     * @type {Array}\n     */\n    this.social_sources = [\n        'facebook',\n        'pinterest',\n        'twitter',\n        'buzzfeed',\n        'linkedin',\n        'blogger',\n        'blogspot',\n        'reddit',\n        'tumblr',\n        'stumbleupon',\n        'tinyurl',\n        'polyvore',\n        'youtube',\n        'yelp',\n        'cafemom',\n        'flickr',\n        'paper.li',\n        'wordpress',\n        'getpocket',\n        'weebly',\n        'delicious',\n        'netvibes',\n        'plurk',\n        'typepad',\n        'vk',\n        'allvoices',\n        'badoo',\n        'disqus',\n        'livefyre',\n        'd.hatena'\n    ];\n\n    /**\n     * Define custom social sources to avoid false positives\n     *\n     * Check intersecting array values here first\n     * \n     * @type {Array}\n     */\n    this.custom_social = [\n        't.co',\n        'plus.google.com',\n        'plus.url.google.com',\n        'bookmarks.yahoo.com',\n        'answers.yahoo.com'\n    ];\n\n    /**\n     * Default visitor details\n     * \n     * @type {Object}\n     */\n    this._wma = {\n        'tracking_id':          '',\n        'timestamp':            this.current_timestamp,          // default timestamp is now\n        'source':               '',\n        'medium':               '',\n        'keyword':              '',\n        'content':              '',\n        'campaign':             '',\n        'landing_page':         window.location.href,           // default landing page location\n    };\n\n    /**\n     * Define Google URL parameters\n     *\n     * @link {https://support.google.com/analytics/answer/1033867?hl=en}\n     * @type {Object}\n     */\n    this.url_parameters = {\n        utm_source:        'source',\n        utm_medium:        'medium',\n        utm_term:          'keyword',\n        utm_content:       'content',\n        utm_campaign:      'campaign'\n    };\n\n    /**\n     * Available mediums (for reference)\n     * \n     * @type {Array}\n     */\n    this.mediums = [\n        'none',\n        'referral',\n        'organic',\n        'social',\n        'paid'\n    ];\n\n    this.init();\n};\n\n/**\n * Provide plugin name and constructor to analytics.js\n * \n * @param  {String} pluginName\n * @param  {Object} pluginConstructor\n * @link   {https://developers.google.com/analytics/devguides/collection/analyticsjs/plugins}\n * @link   {https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference}\n * @return void\n */\nfunction providePlugin( pluginName, pluginConstructor ) {\n    var ga = window[window['GoogleAnalyticsObject'] || 'ga'];\n    if ( ga ) ga('provide', pluginName, pluginConstructor);\n}\n\n/**\n * Helper function: get intersecting arrays\n * \n * @param  {Array} arr1\n * @param  {Array} arr2\n * @return {Array}\n */\nfunction get_intersect( arr1, arr2 ) {\n    var r = [], o = {}, l = arr2.length, i, v;\n    for (i = 0; i < l; i++) {\n        o[arr2[i]] = true;\n    }\n    l = arr1.length;\n    for (i = 0; i < l; i++) {\n        v = arr1[i];\n        if (v in o) {\n            r.push(v);\n        }\n    }\n    return r;\n}\n\n/**\n * Helper function: read cookie\n * \n * @param  {String} name\n * @return {String}\n */\nfunction read_cookie( name ) {\n    var nameEQ  = name + \"=\",\n        ca      = String(document.cookie).split(';');\n\n    for ( var i in ca ) {\n        var c = String(ca[i]);\n        \n        while ( c.charAt(0) == ' ' ) {\n            c = c.substring(1, c.length);\n        }\n        \n        if ( c.indexOf(nameEQ) === 0 ) {\n            return c.substring(nameEQ.length, c.length);\n        }\n    }\n\n    return null;\n}\n\n/**\n * Helper function: set cookie\n *  \n * @param {String} name\n * @param {String} value\n * @param {Integer} timeout\n * @param {String} domain_name\n */\nfunction set_cookie( name, value, timeout, domain_name ) {\n    var expires,\n        date = new Date();\n\n        date.setTime(date.getTime() + (timeout * 24 * 60 * 60 * 1000));\n        expires = \"; expires=\" + date.toGMTString();\n    \n    if ( domain_name == 'none' ) {\n        document.cookie = name + \"=\" + value + expires + \";path=/;\";\n    }\n    else {\n        document.cookie = name + \"=\" + value + expires + \";path=/;domain=\" + domain_name;\n    }\n}\n\n/**\n * Initialize\n * \n * @return void\n */\nAttribution.prototype.init = function () {\n\n    /**\n     * Check cookies\n     *\n     * If this is a new session, get visitor tracking ID and determine medium/sources\n     */\n    if ( this.is_new_visitor() ) {\n\n        // Get GA tracking ID\n        this._wma.tracking_id = parseInt(this.tracker.get('clientId').split('.')[0], 10);\n\n        this.get_info();\n        this.get_url_parameters();\n\n        set_cookie('_wma', JSON.stringify(this._wma), this.campaign_timeout, this.domain_name);\n        set_cookie('_wmb', JSON.stringify(this._wma), this.campaign_timeout, this.domain_name);\n\n        //this.tracker.send('event', 'Unique User Info', this._wma.tracking_id, '', '');\n    }\n\n    /**\n     * Session exists, update visitor data\n     */\n    else if ( this.is_new_session() ) {\n\n        // If referrer is the same host, use the existing wma cookie\n        if ( location.hostname == document.referrer.split('/')[2] ) {\n            this._wma = JSON.parse(read_cookie('_wma'));\n        }\n\n        // Get GA tracking ID\n        this._wma.tracking_id = parseInt(this.tracker.get('clientId').split('.')[0], 10);\n\n        this.get_info();\n        this.get_url_parameters();\n        \n        set_cookie('_wma', JSON.stringify(this._wma), this.campaign_timeout, this.domain_name);\n\n        //this.tracker.send('event', 'Unique User Info', this._wma.tracking_id, '', '');\n    }\n\n    // Ready event listener for form submit\n    this.set_event_listener();\n};\n\n/**\n * Set an event listener for form submit\n *\n * @return void\n */\nAttribution.prototype.set_event_listener = function() {\n    var form        = document.getElementById(this.form_id),\n        _wma        = JSON.parse(read_cookie('_wma')),\n        _wmb        = JSON.parse(read_cookie('_wmb')),\n        email       = this.email,\n        params      = '?lp=' + this.landing_page_id + \n            '&ak=' + this.auth_key +\n            '&t=' + _wma.tracking_id +\n            '&cs=' + _wma.source +\n            '&cm=' + _wma.medium +\n            '&ck=' + _wma.keyword +\n            '&ccn=' + _wma.content +\n            '&cc=' + _wma.campaign +\n            '&cl=' + encodeURIComponent(_wma.landing_page) +\n            '&ct=' + _wma.timestamp +\n            '&os=' + _wmb.source +\n            '&om=' + _wmb.medium +\n            '&ok=' + _wmb.keyword +\n            '&ocn=' + _wmb.content +\n            '&oc=' + _wmb.campaign +\n            '&ol=' + _wmb.landing_page +\n            '&ot=' + _wmb.timestamp +\n            '&r=' + document.referrer;\n\n    // Create and call 1x1 pixel on form submit\n    if ( form.addEventListener ) {\n        form.addEventListener('submit', function(e) {\n            params  += '&em=' + document.getElementsByName(email)[0].value;\n\n            var x   = document.createElement('img');\n            x.src   = 'http://45.55.168.125/pixel' + params;\n        }, false);\n    }\n    else if (form.attachEvent) {\n        form.attachEvent('onsubmit', function(e) {\n            params      += '&em=' + document.getElementsByName(email)[0].value;\n\n            var x       = document.createElement('img');\n                x.src   = 'http://45.55.168.125/pixel' + params;\n        });\n    }\n};\n\n/**\n * Check if this is a new visitor\n * \n * @return {Boolean}\n */\nAttribution.prototype.is_new_visitor = function () {\n    return JSON.parse(read_cookie('_wma')) === null ? true : false;\n};\n\n/**\n * Check if this is a new session\n * \n * @return {Boolean}\n */\nAttribution.prototype.is_new_session = function () {\n    var cookie = JSON.parse(read_cookie('_wma'));\n\n    // If current timestamp is past the cookie timestamp + session timeout length, this is a new session\n    if ( this.current_timestamp > parseInt(cookie.timestamp, 10) + this.session_timeout ) {\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\n/**\n * Get visitor medium and source info\n */\nAttribution.prototype.get_info = function () {\n\n    // Set updated timestamp\n    this._wma.timestamp = this.current_timestamp;\n\n    /**\n     * Check if referrer is undefined, in organic_sources array or in social_sources array\n     */\n    if ( document.referrer === undefined || document.referrer === 'undefined' || document.referrer === '' ) {\n        this._wma.medium = 'none';\n        this._wma.source = 'direct';\n    }\n\n    // If referrer is not the same host, process medium and source\n    else if ( location.hostname != document.referrer.split('/')[2] ) {\n        this._wma.source    = document.referrer.split('/')[2];         // split to get domain string\n        var source          = this._wma.source.split('.');             // split to get domain parts\n\n        // First check for custom social sources\n        if ( this.custom_social.indexOf(this._wma.source) > 0 ) {\n            this._wma.medium = 'social';\n        }\n        \n        // Then check for search engines\n        else if ( get_intersect(this.organic_sources, source).length > 0 ) {\n            var url_strs = this.get_url_parameters(document.URL);\n\n            // If gclid exist in current URL, paid medium\n            if ( 'gclid' in url_strs ) {\n                this._wma.medium = 'paid';\n            }\n\n            // Organic\n            else {\n                this._wma.medium    = 'organic';\n                this._wma.keyword   = 'not provided';\n\n                var refer_strs      = this.get_url_parameters(document.referrer);\n\n                // Look for potential search terms\n                if ( 'q' in refer_strs ) {\n                    this._wma.keyword = refer_strs.q;\n                }\n            }\n        }\n\n        // Then check for social sources\n        else if ( get_intersect(this.social_sources, source).length > 0 ) {\n            this._wma.medium = 'social';\n        }\n        \n        // Else referral\n        else {\n            this._wma.medium = 'referral';\n        }\n    }\n};\n\n/**\n * Get and set Google URL parameters\n *\n * @param {String} url\n * @return {Object}\n */\nAttribution.prototype.get_url_parameters = function ( url ) {\n    var vars    = [], hash, hashes,\n        kv      = {};\n\n    if ( url ) {\n        hashes  = String(url.slice(url.indexOf('?') + 1)).split('&');\n    }\n    else {\n        hashes  = String(window.location.href.slice(window.location.href.indexOf('?') + 1)).split('&');\n    }\n\n    for ( var i in hashes ) {\n        hash = String(hashes[i]).split('=');\n        \n        kv[hash[0]] = hash[1];\n        \n        // If this is a matching URL tag, update _wma values\n        if (hash[0] in this.url_parameters) {\n            var key        = this.url_parameters[hash[0]];\n            this._wma[key] = decodeURIComponent(hash[1]);\n        }\n    }\n\n    return kv;\n};\n\n// Register the plugin.\nprovidePlugin( 'Attribution', Attribution );"],"sourceRoot":"/source/"}